package com.icloud.web.order;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.github.pagehelper.PageInfo;
import com.icloud.model.business.BeanOrder;
import com.icloud.model.business.BeanOrderItem;
import com.icloud.service.business.BeanOrderService;
import com.icloud.web.BaseController;

@Controller
@RequestMapping("${backPath}/beanOrders")
public class BeanOrderController extends BaseController<BeanOrder>{

	@Autowired 
	private BeanOrderService beanOrderService;
	
	/**
	 * 获取 订单列表
	 * @param request
	 * @param beanOrder
	 * @return
	 */
	@RequestMapping("/list")
	@Override
	public String list(HttpServletRequest request, BeanOrder t)
			throws Exception {
		log.warn("获取订单列表！");
		
		String pageNumStr = request.getParameter("pageNum");
		Long pageNum = (long) 1;
		if(pageNumStr != null && !"".equals(pageNumStr)) {
			pageNum = Long.parseLong(pageNumStr);
		}
		 
		log.warn("当前页数：" + pageNum);
		//PageInfo<BeanOrder> pageInfo = beanOrderService.findByPage(1, 10, t);;
		List<BeanOrder> list = new ArrayList<>();
		BeanOrder beanOrder = new BeanOrder();
		beanOrder.setId(Long.valueOf("1"));
		beanOrder.setCreateTime(new Date());
		beanOrder.setScore(39);
		beanOrder.setOrderNo("123124");
		beanOrder.setGoodName("aa");
		beanOrder.setDeleteStatus("2");
		beanOrder.setOrderType("1");
		beanOrder.setOrderStatus("0");
		list.add(beanOrder);
		beanOrder = new BeanOrder();
		beanOrder.setId(Long.valueOf("2"));
		beanOrder.setCreateTime(new Date());
		beanOrder.setScore(33);
		beanOrder.setOrderNo("123125");
		beanOrder.setGoodName("aaa");
		beanOrder.setDeleteStatus("1");
		beanOrder.setOrderType("2");
		beanOrder.setOrderStatus("1");
		list.add(beanOrder);
		
		PageInfo<BeanOrder> pageInfo = new PageInfo<>(list);
		pageInfo.setPageNum(1);
		pageInfo.setSize(10);
		pageInfo.setTotal(list.size());
		pageInfo.setPages(1);
		
		pageInfo.setHasNextPage(false);
        pageInfo.setHasPreviousPage(false);
		request.setAttribute("page", pageInfo);
		request.setAttribute("record", t);
		return "business/orders/bean_orders_list";
	}

	@RequestMapping("/asynList")
	@Override
	public String getList(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		System.out.println("Test asynList");
		return null;
	}

	@Override
	public String toinput(Integer id, HttpServletRequest request)
			throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String input(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String del(Integer id, HttpServletResponse response)
			throws Exception {
		// TODO Auto-generated method stub
		return null;
	}
	
	@RequestMapping("/orderDetail")
	public String orderDetail(HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		System.out.println("toOrderDetail");
		String idStr = request.getParameter("id");
		Long id = 0L;
		if(idStr != null && !"".equals(idStr)) {
			id = Long.parseLong(idStr);
		}
		BeanOrder beanOrder = new BeanOrder();
		beanOrder.setId(id);
		beanOrder.setCreateTime(new Date());
		beanOrder.setScore(39);
		beanOrder.setOrderNo("123124");
		beanOrder.setGoodName("aa");
		beanOrder.setDeleteStatus("2");
		beanOrder.setOrderType("1");
		beanOrder.setOrderStatus("0");
		
		request.setAttribute("beanOrder", beanOrder);
		
		List<BeanOrderItem> beanOrderItems = new ArrayList<>();
		BeanOrderItem beanOrderItem = new BeanOrderItem();
		beanOrderItem.setId(Long.valueOf("1"));
		beanOrderItem.setGoodName("adfeg");
		beanOrderItem.setGoodId(1);
		beanOrderItem.setGoodImage("http://sfief.sjfije.jpg");
		beanOrderItem.setGoodQuantities(22);
		beanOrderItem.setOrderId(id);
        beanOrderItem.setScore(12);
        beanOrderItems.add(beanOrderItem);
        
        beanOrderItem = new BeanOrderItem();
		beanOrderItem.setId(Long.valueOf("2"));
		beanOrderItem.setGoodName("adfeg341");
		beanOrderItem.setGoodId(2);
		beanOrderItem.setGoodImage("http://sfief.sjfij12e.jpg");
		beanOrderItem.setGoodQuantities(12);
		beanOrderItem.setOrderId(id);
        beanOrderItem.setScore(15);
        beanOrderItems.add(beanOrderItem);
        
        request.setAttribute("beanOrderItems", beanOrderItems);
		return "business/orders/bean_orders_detail";
	}
	
	public List<BeanOrder> getBeanOrderList(int num){
		
		return new ArrayList<>();
	}

	
}
