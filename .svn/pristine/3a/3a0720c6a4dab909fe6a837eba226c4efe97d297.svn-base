package com.icloud.web.business.back;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.github.pagehelper.PageInfo;
import com.icloud.common.ConfigUtil;
import com.icloud.common.ResponseUtils;
import com.icloud.model.business.BeanGoods;
import com.icloud.model.business.BeanGoodsWithBLOBs;
import com.icloud.service.business.BeanGoodsService;
import com.icloud.web.BaseController;

/**
 * 后台商品管理
 * @author zdh
 *
 */
@Controller
@RequestMapping(value = "${backPath}/beanGoods")
public class BackBeanGoodsController extends BaseController<BeanGoods>{

	@Autowired
	private BeanGoodsService beanGoodsService;
	
	/**
	 * 获取列表
	 */
	@RequestMapping(value = "/list")
	@Override
	public String list(HttpServletRequest request, BeanGoods t)
			throws Exception {
		t.setDeleteStatus("0");//删除未删除的商品
		PageInfo<BeanGoods> page = beanGoodsService.findByPage(1, 10, t);
		request.setAttribute("page", page);
		request.setAttribute("record", t);
		return "business/goods/bean_goods_list";
	}

	/**
	 * 异步翻页
	 */
	@RequestMapping(value = "/getList")
	@Override
	public String getList(HttpServletRequest request,HttpServletResponse response) throws Exception {
		String name = request.getParameter("name");	
		String status = request.getParameter("status");	
		String deleteStatus = request.getParameter("deleteStatus");
		String categoriesId = request.getParameter("categoriesId");	
		String pageNo = request.getParameter("pageNo");	
		String pageSize = request.getParameter("pageSize");	
		BeanGoodsWithBLOBs t = new BeanGoodsWithBLOBs();
		if(StringUtils.isNotBlank(name)){
			t.setName(name);
		}
		if(StringUtils.isNotBlank(deleteStatus)){
			t.setDeleteStatus(deleteStatus);
		}
		if(StringUtils.isNotBlank(status)){
			t.setStatus(status);
		}
		if(StringUtils.isNotBlank(categoriesId)){
			t.setCategoriesId(Integer.parseInt(categoriesId));
		}
		t.setDeleteStatus("0");//删除未删除的商品
		PageInfo<BeanGoods> page = beanGoodsService
				.findByPage(StringUtils.isNotBlank(pageNo)?Integer.parseInt(pageNo):1, StringUtils.isNotBlank(pageSize)?Integer.parseInt(pageSize):10, t);
		List<BeanGoods> list = page.getList();
		JSONObject json = new JSONObject();
		json.put("pages",page.getPages());
		JSONArray array = new JSONArray();
		for(BeanGoods s:list){
			JSONObject sub = new JSONObject();
			sub.put("id",s.getId());
			sub.put("name", s.getName());
			sub.put("goodImage", s.getGoodImage());
			sub.put("status", s.getStatus());
			array.add(sub);
		}
		json.put("list", array);
		ResponseUtils.renderJson(response, json.toJSONString());
		return null;
	}

	/**
	 * 跳转添加编辑页
	 */
	@RequestMapping(value = "/toinput")
	@Override
	public String toinput(Integer id, HttpServletRequest request)throws Exception {
		BeanGoods record = null;
		if(id!=null){
			record = beanGoodsService.findByKey(id);
		}
		request.setAttribute("record", record);
		return "business/goods/bean_goods_input";
	}

	/**
	 * 保存
	 */
	@RequestMapping(value = "/input")
	@Override
	public String input(HttpServletRequest request, HttpServletResponse response)throws Exception {
			
		// TODO Auto-generated method stub
		return "redirect:"+ConfigUtil.get("backpage")+"/beanGoods/list";
	}

	@Override
	public String del(Integer id, HttpServletResponse response){
		 try {
			beanGoodsService.delete(id);
			ResponseUtils.renderHtml(response, "0000");
			return null;
		} catch (Exception e) {
			e.printStackTrace();
		}
		ResponseUtils.renderHtml(response, "1000");
		return null;
		
	}


}
